name: ROS2 CI

on:
  pull_request:
    branches:
      - 'ros2/*'
      - 'ros2'

jobs:
  get_ros_distros:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install curl jq
      - name: Calculate active distributions
        id: set-matrix
        run: |
          RAW_DOCKER_JSON=$(curl -s "https://hub.docker.com/v2/repositories/rostooling/setup-ros-docker/tags?page_size=1000")
          ACTIVE_ROS_DISTROS=$( echo $RAW_DOCKER_JSON | jq -r '.results[] | select(.tag_status=="active") | select(.name | contains("ros-base-latest")) | .name' | sort -u)
          echo $ACTIVE_ROS_DISTROS          
          LIST_OF_DISTROS=""
          DICT_OF_DISTRO_INFO=""
          for distro_str in $ACTIVE_ROS_DISTROS; do
            IFS="-" read -ra SPLIT_STR <<< $distro_str
            LIST_OF_DISTROS+="\"${SPLIT_STR[3]}\" "
            DICT_OF_DISTRO_INFO+="{docker_image:\"${distro_str}\",ros_distro:\"${SPLIT_STR[3]}\"} "
          done
          DISTRO_STR=$(echo ${LIST_OF_DISTROS[@]} | sed -e 's|^ *|[|' -e 's| *$|]|' -e 's|  *|, |g')
          MATRIX_STR=$(echo ${DICT_OF_DISTRO_INFO[@]} | sed -e 's|^ *|[|' -e 's| *$|]|' -e 's|  *|, |g')
          echo "DISTRO_STR: ${DISTRO_STR}"
          echo "MATRIX_STR: ${MATRIX_STR}"
          echo "series=$DISTRO_STR" >> $GITHUB_OUTPUT
          echo "matrix=$MATRIX_STR" >> $GITHUB_OUTPUT
    outputs:
      series: ${{ steps.set-matrix.outputs.series}}
      matrix: ${{ steps.set-matrix.outputs.matrix}}

  build_and_test:
    runs-on: [ubuntu-latest]
    needs: get_ros_distros
    strategy:
      fail-fast: false
      matrix:
        ros_distro: ${{ fromJson(needs.get_ros_distros.outputs.series) }}
        include:
          ${{ fromJson(needs.get_ros_distros.outputs.matrix) }}
    container:
      image: rostooling/setup-ros-docker:${{ matrix.docker_image }}
    steps:
      - name: Setup Directories
        run: mkdir -p ros_ws/src
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: ros_ws/src
      - name: build and test
        uses: ros-tooling/action-ros-ci@master
        if: ${{ contains('["melodic", "noetic"]', matrix.ros_distro) }}
        with:
          package-name: usb_cam
          target-ros1-distro: ${{ matrix.ros_distro }}
          vcs-repo-file-url: ""
      - name: Build and Test ROS 2
        id: build_and_test_step
        uses: ros-tooling/action-ros-ci@master
        if: ${{ contains('["melodic", "noetic"]', matrix.ros_distro) == false }}
        with:
          package-name: usb_cam
          target-ros2-distro: ${{ matrix.ros_distro }}
          vcs-repo-file-url: ""
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc"]
              }
            }
          # If possible, pin the repository in the workflow to a specific commit to avoid
          # changes in colcon-mixin-repository from breaking your tests.
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml
      - uses: actions/upload-artifact@v1
        with:
          name: colcon-logs-${{ matrix.ros_distro }}
          path: ${{ steps.build_and_test_step.outputs.ros-workspace-directory-name }}/log
        if: always()
      - uses: actions/upload-artifact@v1
        with:
          name: lcov-logs-${{ matrix.ros_distro }}
          path: ${{ steps.build_and_test_step.outputs.ros-workspace-directory-name }}/lcov
        if: always()